From 4a5fdbf4afaa54c8fb2497da7689cb51976cc44a Mon Sep 17 00:00:00 2001
From: Christian Schwede <christian.schwede@enovance.com>
Date: Tue, 19 Nov 2013 08:29:30 +0100
Subject: [PATCH] keystoneclient requires an email address when creating a user

python-keystoneclient v2.0 currently requires an email address,
but Keystone doesn't require an email address any longer.

Closes-Bug: #1252621
Change-Id: I4fe54aca9efcb0e5ab6ad901ee94796a04035224
---
 keystoneclient/tests/v2_0/test_users.py | 34 +++++++++++++++++++++++++++++++++
 keystoneclient/v2_0/users.py            |  3 +--
 2 files changed, 35 insertions(+), 2 deletions(-)

diff --git a/keystoneclient/tests/v2_0/test_users.py b/keystoneclient/tests/v2_0/test_users.py
index 1c9395c..d11e038 100644
--- a/keystoneclient/tests/v2_0/test_users.py
+++ b/keystoneclient/tests/v2_0/test_users.py
@@ -77,6 +77,40 @@ class UserTests(utils.TestCase):
         self.assertRequestBodyIs(json=req_body)
 
     @httpretty.activate
+    def test_create_user_without_email(self):
+        req_body = {
+            "user": {
+                "name": "gabriel",
+                "password": "test",
+                "tenantId": 2,
+                "enabled": True,
+                "email": None,
+            }
+        }
+
+        resp_body = {
+            "user": {
+                "name": "gabriel",
+                "enabled": True,
+                "tenantId": 2,
+                "id": 3,
+                "password": "test",
+            }
+        }
+
+        self.stub_url(httpretty.POST, ['users'], json=resp_body)
+
+        user = self.client.users.create(
+            req_body['user']['name'],
+            req_body['user']['password'],
+            tenant_id=req_body['user']['tenantId'],
+            enabled=req_body['user']['enabled'])
+        self.assertTrue(isinstance(user, users.User))
+        self.assertEqual(user.id, 3)
+        self.assertEqual(user.name, "gabriel")
+        self.assertRequestBodyIs(json=req_body)
+
+    @httpretty.activate
     def test_delete(self):
         self.stub_url(httpretty.DELETE, ['users', '1'], status=204)
         self.client.users.delete(1)
diff --git a/keystoneclient/v2_0/users.py b/keystoneclient/v2_0/users.py
index 4e2f03d..d42cf60 100644
--- a/keystoneclient/v2_0/users.py
+++ b/keystoneclient/v2_0/users.py
@@ -86,9 +86,8 @@ class UserManager(base.ManagerWithFind):
         return self._update("/users/%s/OS-KSADM/tenant" % base.getid(user),
                             params, "user")
 
-    def create(self, name, password, email, tenant_id=None, enabled=True):
+    def create(self, name, password, email=None, tenant_id=None, enabled=True):
         """Create a user."""
-        # FIXME(ja): email should be optional, keystone currently requires it
         params = {"user": {"name": name,
                            "password": password,
                            "tenantId": tenant_id,
