From feefba304cd05b3a40d0e7520bc14c35e25f5e93 Mon Sep 17 00:00:00 2001
From: Jakub Ruzicka <jruzicka@redhat.com>
Date: Tue, 28 May 2013 20:37:43 +0200
Subject: [PATCH] Provide keystone CLI man page.

Resolves: bug 1185142
Implements blueprint: clients-man-pages

Provide basic but hopefully useful man page.

shell.rst was merged into and replaced by the man page in HTML docs.

Change-Id: I0a90e4638cc7e4ed9c02c5abd7d84a4079e5f50d
---
 doc/source/conf.py          |  18 ++++--
 doc/source/index.rst        |   2 +-
 doc/source/man/keystone.rst | 150 ++++++++++++++++++++++++++++++++++++++++++++
 doc/source/shell.rst        |  99 -----------------------------
 4 files changed, 164 insertions(+), 105 deletions(-)
 create mode 100644 doc/source/man/keystone.rst
 delete mode 100644 doc/source/shell.rst

diff --git a/doc/source/conf.py b/doc/source/conf.py
index 9486507..603daf2 100644
--- a/doc/source/conf.py
+++ b/doc/source/conf.py
@@ -14,6 +14,7 @@
 
 import os
 import sys
+import pbr.version
 
 sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__),
                 '..', '..')))
@@ -49,16 +50,16 @@ master_doc = 'index'
 
 # General information about the project.
 project = u'python-keystoneclient'
-copyright = u'Rackspace, based on work by Jacob Kaplan-Moss'
+copyright = u'OpenStack Contributors'
 
 # The version info for the project you're documenting, acts as replacement for
 # |version| and |release|, also used in various other places throughout the
 # built documents.
-#
-# The short XXXX.Y version.
-version = '2012.3'
+version_info = pbr.version.VersionInfo('python-keystoneclient')
+# The short X.Y version.
+version = version_info.version_string()
 # The full version, including alpha/beta/rc tags.
-release = '2012.3-dev'
+release = version_info.release_string()
 
 # The language for content autogenerated by Sphinx. Refer to documentation
 # for a list of supported languages.
@@ -98,6 +99,13 @@ pygments_style = 'sphinx'
 # A list of ignored prefixes for module index sorting.
 #modindex_common_prefix = []
 
+# Grouping the document tree for man pages.
+# List of tuples 'sourcefile', 'target', u'title', u'Authors name', 'manual'
+
+man_pages = [
+    ('man/keystone', 'keystone', u'Client for OpenStack Identity API',
+     [u'OpenStack Contributors'], 1),
+]
 
 # -- Options for HTML output --------------------------------------------------
 
diff --git a/doc/source/index.rst b/doc/source/index.rst
index faffc4f..45cb1d6 100644
--- a/doc/source/index.rst
+++ b/doc/source/index.rst
@@ -11,7 +11,7 @@ Contents:
    :maxdepth: 1
 
    releases
-   shell
+   man/keystone
    using-api
 
    api/autoindex
diff --git a/doc/source/man/keystone.rst b/doc/source/man/keystone.rst
new file mode 100644
index 0000000..61890da
--- /dev/null
+++ b/doc/source/man/keystone.rst
@@ -0,0 +1,150 @@
+=======================================
+:program:`keystone` command line utility
+=======================================
+
+.. program:: keystone
+.. highlight:: bash
+
+SYNOPSIS
+========
+
+:program:`keystone` [options] <command> [command-options]
+
+:program:`keystone help`
+
+:program:`keystone help` <command>
+
+
+DESCRIPTION
+===========
+
+The :program:`keystone` command line utility interacts with services providing
+OpenStack Identity API (e.g. Keystone).
+
+To communicate with the API, you will need to be authenticated - and the
+:program:`keystone` provides multiple options for this.
+
+While bootstrapping keystone the authentication is accomplished with a
+shared secret token and the location of the Identity API endpoint. The
+shared secret token is configured in keystone.conf as "admin_token".
+
+You can specify those values on the command line with :option:`--os-token`
+and :option:`--os-endpoint`, or set them in environment variables:
+
+.. envvar:: OS_SERVICE_TOKEN
+
+    Your keystone administrative token
+
+.. envvar:: OS_SERVICE_ENDPOINT
+
+    Your Identity API endpoint
+
+The command line options will override any environment variables set.
+
+If you already have accounts, you can use your OpenStack username and
+password. You can do this with the :option:`--os-username`,
+:option:`--os-password`.
+
+Keystone allows a user to be associated with one or more projects which are
+historically called tenants.  To specify the project for which you want to
+authorize against, you may optionally specify a :option:`--os-tenant-id` or
+:option:`--os-tenant-name`.
+
+Instead of using options, it is easier to just set them as environment
+variables:
+
+.. envvar:: OS_USERNAME
+
+    Your Keystone username.
+
+.. envvar:: OS_PASSWORD
+
+    Your Keystone password.
+
+.. envvar:: OS_TENANT_NAME
+
+    Name of Keystone project.
+
+.. envvar:: OS_TENANT_ID
+
+    ID of Keystone Tenant.
+
+.. envvar:: OS_AUTH_URL
+
+    The OpenStack API server URL.
+
+.. envvar:: OS_IDENTITY_API_VERSION
+
+    The OpenStack Identity API version.
+
+.. envvar:: OS_CACERT
+
+    The location for the CA truststore (PEM formatted) for this client.
+
+.. envvar:: OS_CERT
+
+    The location for the keystore (PEM formatted) containing the public
+    key of this client.  This keystore can also optionally contain the
+    private key of this client.
+
+.. envvar:: OS_KEY
+
+    The location for the keystore (PEM formatted) containing the private
+    key of this client.  This value can be empty if the private key is
+    included in the OS_CERT file.
+
+For example, in Bash you'd use::
+
+    export OS_USERNAME=yourname
+    export OS_PASSWORD=yadayadayada
+    export OS_TENANT_NAME=myproject
+    export OS_AUTH_URL=http(s)://example.com:5000/v2.0/
+    export OS_IDENTITY_API_VERSION=2.0
+    export OS_CACERT=/etc/keystone/yourca.pem
+    export OS_CERT=/etc/keystone/yourpublickey.pem
+    export OS_KEY=/etc/keystone/yourprivatekey.pem
+
+
+OPTIONS
+=======
+
+To get a list of available commands and options run::
+
+    keystone help
+
+To get usage and options of a command::
+
+    keystone help <command>
+
+
+EXAMPLES
+========
+
+Get information about endpoint-create command::
+
+    keystone help endpoint-create
+
+View endpoints of OpenStack services::
+
+    keystone catalog
+
+Create a 'service' project::
+
+    keystone tenant-create --name=service
+
+Create service user for nova::
+
+    keystone user-create --name=nova \
+                         --tenant_id=<project ID> \
+                         --email=nova@nothing.com
+
+View roles::
+
+    keystone role-list
+
+
+BUGS
+====
+
+Keystone client is hosted in Launchpad so you can view current bugs at
+https://bugs.launchpad.net/python-keystoneclient/.
diff --git a/doc/source/shell.rst b/doc/source/shell.rst
deleted file mode 100644
index 02d158c..0000000
--- a/doc/source/shell.rst
+++ /dev/null
@@ -1,99 +0,0 @@
-The :program:`keystone` shell utility
-=====================================
-
-.. program:: keystone
-.. highlight:: bash
-
-
-The :program:`keystone` shell utility interacts with OpenStack Identity API
-from the command line. It supports the entirety of the OpenStack Identity API.
-
-To communicate with the API, you will need to be authenticated - and the
-:program:`keystone` provides multiple options for this.
-
-While bootstrapping keystone the authentication is accomplished with a
-shared secret token and the location of the Identity API endpoint. The
-shared secret token is configured in keystone.conf as "admin_token".
-
-You can specify those values on the command line with :option:`--os-token`
-and :option:`--os-endpoint`, or set them in environment variables:
-
-.. envvar:: OS_SERVICE_TOKEN
-
-    Your keystone administrative token
-
-.. envvar:: OS_SERVICE_ENDPOINT
-
-    Your Identity API endpoint
-
-The command line options will override any environment variables set.
-
-If you already have accounts, you can use your OpenStack username and
-password. You can do this with the :option:`--os-username`,
-:option:`--os-password`.
-
-Keystone allows a user to be associated with one or more tenants. To specify
-the tenant for which you want to authorize against, you may optionally
-specify a :option:`--os-tenant-id` or :option:`--os-tenant-name`.
-
-Instead of using options, it is easier to just set them as environment
-variables:
-
-.. envvar:: OS_USERNAME
-
-    Your Keystone username.
-
-.. envvar:: OS_PASSWORD
-
-    Your Keystone password.
-
-.. envvar:: OS_TENANT_NAME
-
-    Name of Keystone Tenant.
-
-.. envvar:: OS_TENANT_ID
-
-    ID of Keystone Tenant.
-
-.. envvar:: OS_AUTH_URL
-
-    The OpenStack API server URL.
-
-.. envvar:: OS_IDENTITY_API_VERSION
-
-    The OpenStack Identity API version.
-
-.. envvar:: OS_CACERT
-
-    The location for the CA truststore (PEM formatted) for this client.
-
-.. envvar:: OS_CERT
-
-    The location for the keystore (PEM formatted) containing the public
-    key of this client.  This keystore can also optionally contain the
-    private key of this client.
-
-.. envvar:: OS_KEY
-
-    The location for the keystore (PEM formatted) containing the private
-    key of this client.  This value can be empty if the private key is
-    included in the OS_CERT file.
-
-For example, in Bash you'd use::
-
-    export OS_USERNAME=yourname
-    export OS_PASSWORD=yadayadayada
-    export OS_TENANT_NAME=myproject
-    export OS_AUTH_URL=http(s)://example.com:5000/v2.0/
-    export OS_IDENTITY_API_VERSION=2.0
-    export OS_CACERT=/etc/keystone/yourca.pem
-    export OS_CERT=/etc/keystone/yourpublickey.pem
-    export OS_KEY=/etc/keystone/yourprivatekey.pem
-
-From there, all shell commands take the form::
-
-    keystone <command> [arguments...]
-
-Run :program:`keystone help` to get a full list of all possible commands,
-and run :program:`keystone help <command>` to get detailed help for that
-command.
