From b875449a8cd3a3b0b7e10a35844030136aeb15c2 Mon Sep 17 00:00:00 2001
From: Tzu-Mainn Chen <tzumainn@redhat.com>
Date: Fri, 9 May 2014 16:34:42 +0200
Subject: [PATCH] Ensure ipmi username and password are set

The UI was explicitly setting these values to 'None'; the
ipmi_username field was also misnamed.  This change allows
the ipmi username and password to be properly passed down.

Closes-Bug: #1317922
Change-Id: I195e6f5399ac932d5427d742679df2d4a22dd114
---
 tuskar_ui/api.py                                     |  2 +-
 tuskar_ui/infrastructure/nodes/forms.py              |  7 +++++--
 .../nodes/templates/nodes/_nodes_formset_form.html   |  2 +-
 tuskar_ui/infrastructure/nodes/tests.py              | 20 ++++++++++++--------
 4 files changed, 19 insertions(+), 12 deletions(-)

diff --git a/tuskar_ui/api.py b/tuskar_ui/api.py
index e2c47bd..be4e21c 100644
--- a/tuskar_ui/api.py
+++ b/tuskar_ui/api.py
@@ -665,7 +665,7 @@ class Node(base.APIResourceWrapper):
         #     )
         node = baremetalclient(request).create(**cls.nova_baremetal_format(
             ipmi_address, cpu, ram, local_disk, mac_addresses,
-            ipmi_username=None, ipmi_password=None))
+            ipmi_username=ipmi_username, ipmi_password=ipmi_password))
 
         return cls(node)
 
diff --git a/tuskar_ui/infrastructure/nodes/forms.py b/tuskar_ui/infrastructure/nodes/forms.py
index ad4ed35..d58555e 100644
--- a/tuskar_ui/infrastructure/nodes/forms.py
+++ b/tuskar_ui/infrastructure/nodes/forms.py
@@ -31,7 +31,7 @@ class NodeForm(django.forms.Form):
         required=False,
         widget=django.forms.TextInput(attrs={'class': 'input input-medium'}),
     )
-    ipmi_user = django.forms.CharField(
+    ipmi_username = django.forms.CharField(
         label=_("IPMI User"),
         required=False,
         widget=django.forms.TextInput(attrs={'class': 'input input-medium'}),
@@ -114,7 +114,10 @@ class BaseNodeFormset(django.forms.formsets.BaseFormSet):
             if not form.cleaned_data:
                 raise django.forms.ValidationError(
                     _("Please provide node data for all nodes."))
-
+            if not form.cleaned_data.get('ipmi_username'):
+                form.cleaned_data['ipmi_username'] = None
+            if not form.cleaned_data.get('ipmi_password'):
+                form.cleaned_data['ipmi_password'] = None
 
 NodeFormset = django.forms.formsets.formset_factory(NodeForm, extra=1,
                                                     formset=BaseNodeFormset)
diff --git a/tuskar_ui/infrastructure/nodes/templates/nodes/_nodes_formset_form.html b/tuskar_ui/infrastructure/nodes/templates/nodes/_nodes_formset_form.html
index 32ae201..7083034 100644
--- a/tuskar_ui/infrastructure/nodes/templates/nodes/_nodes_formset_form.html
+++ b/tuskar_ui/infrastructure/nodes/templates/nodes/_nodes_formset_form.html
@@ -8,7 +8,7 @@
     <div class="row-fluid">
       <h5>Power Management</h5>
       {% include 'infrastructure/nodes/_nodes_formset_field.html' with field=form.ipmi_address %}
-      {% include 'infrastructure/nodes/_nodes_formset_field.html' with field=form.ipmi_user %}
+      {% include 'infrastructure/nodes/_nodes_formset_field.html' with field=form.ipmi_username %}
       {% include 'infrastructure/nodes/_nodes_formset_field.html' with field=form.ipmi_password %}
     </div>
     <div class="row-fluid">
diff --git a/tuskar_ui/infrastructure/nodes/tests.py b/tuskar_ui/infrastructure/nodes/tests.py
index 1dfbf5a..ef298c2 100644
--- a/tuskar_ui/infrastructure/nodes/tests.py
+++ b/tuskar_ui/infrastructure/nodes/tests.py
@@ -156,6 +156,8 @@ class NodesTests(test.BaseAdminViewTests):
             'register_nodes-MAX_NUM_FORMS': 1000,
 
             'register_nodes-0-ipmi_address': '127.0.0.1',
+            'register_nodes-0-ipmi_username': 'username',
+            'register_nodes-0-ipmi_password': 'password',
             'register_nodes-0-mac_address': 'de:ad:be:ef:ca:fe',
             'register_nodes-0-cpus': '1',
             'register_nodes-0-memory': '2',
@@ -174,10 +176,10 @@ class NodesTests(test.BaseAdminViewTests):
             res = self.client.post(REGISTER_URL, data)
             request = Node.create.call_args_list[0][0][0]  # This is a hack.
             self.assertListEqual(Node.create.call_args_list, [
-                call(request, '127.0.0.1', 1, 2, 3,
-                     'DE:AD:BE:EF:CA:FE', None, u''),
-                call(request, '127.0.0.2', 4, 5, 6,
-                     'DE:AD:BE:EF:CA:FF', None, u''),
+                call(request, u'127.0.0.1', 1, 2, 3,
+                     'DE:AD:BE:EF:CA:FE', u'username', u'password'),
+                call(request, u'127.0.0.2', 4, 5, 6,
+                     'DE:AD:BE:EF:CA:FF', None, None),
             ])
         self.assertRedirectsNoFollow(res, INDEX_URL)
 
@@ -188,6 +190,8 @@ class NodesTests(test.BaseAdminViewTests):
             'register_nodes-MAX_NUM_FORMS': 1000,
 
             'register_nodes-0-ipmi_address': '127.0.0.1',
+            'register_nodes-0-ipmi_username': 'username',
+            'register_nodes-0-ipmi_password': 'password',
             'register_nodes-0-mac_address': 'de:ad:be:ef:ca:fe',
             'register_nodes-0-cpus': '1',
             'register_nodes-0-memory': '2',
@@ -206,10 +210,10 @@ class NodesTests(test.BaseAdminViewTests):
             res = self.client.post(REGISTER_URL, data)
             request = Node.create.call_args_list[0][0][0]  # This is a hack.
             self.assertListEqual(Node.create.call_args_list, [
-                call(request, '127.0.0.1', 1, 2, 3,
-                     'DE:AD:BE:EF:CA:FE', None, u''),
-                call(request, '127.0.0.2', 4, 5, 6,
-                     'DE:AD:BE:EF:CA:FF', None, u''),
+                call(request, u'127.0.0.1', 1, 2, 3,
+                     'DE:AD:BE:EF:CA:FE', u'username', u'password'),
+                call(request, u'127.0.0.2', 4, 5, 6,
+                     'DE:AD:BE:EF:CA:FF', None, None),
             ])
         self.assertTemplateUsed(
             res, 'infrastructure/nodes/register.html')
-- 
1.8.1.4

